#!/media/Storage/Files/Development/OpenSource/360script/venv/bin/python3
################################################################################
"""
360 Systems File Conversion and Upload Utility
Â© 2024 | Stanley Solutions | Joe Stanley
MIT License
"""
################################################################################

import os
from argparse import ArgumentParser
from ftplib import FTP
from tempfile import TemporaryDirectory
from pathlib import Path

from ffmpeg import FFmpeg
from ffmpeg.errors import FFmpegError
from rich_argparse import RichHelpFormatter

RichHelpFormatter.usage_markup = True

parser = ArgumentParser(
    formatter_class=RichHelpFormatter,
)
parser.add_argument(
    "host",
    help="IPv4 address of 360 Systems Instant Replay",
)
parser.add_argument(
    "files",
    nargs='+',
    help="list of files to convert and send",
)
parser.add_argument(
    "-u", "--username",
    default="360USER",
    help="360 Systems Instant Replay FTP username",
)
parser.add_argument(
    "-p", "--password",
    default="PASSWORD",
    help="360 Systems Instant Replay FTP password",
)

args = parser.parse_args()

# Contextual Temporary Directory for the Modified File
with TemporaryDirectory() as temp_dir:

    with FTP(args.host, args.username, args.password) as session:

        if "." in args.files:
            root = Path(os.getcwd())
            for item in os.listdir(str(root)):
                path = root / item
                if path.is_file():
                    args.files.append(str(path))

        # Convert and Send Files
        for src in args.files:
            if src == ".":
                continue # Skip the folder

            file_name = Path(src).with_suffix(".wav").name.upper()
            dst = Path(temp_dir) / file_name
            # Convert
            try:
                print(f"Converting: {Path(src).name}")
                FFmpeg().input(src).output(str(dst), ar="44100", ac=2).execute()
            except FFmpegError as err:
                raise ValueError(f"Failed for '{src}'") from err

            # Send File
            with open(dst, 'rb') as file:
                resp = session.storbinary(f"STOR {file_name}", file)
                if "Transfer succeeded" in resp:
                    print(f"Successfully Transferred: {file_name}")
